[metadata]
name = pymuscle
version = attr: pymuscle._version.__version__
author = Martin Larralde
author_email = martin.larralde@embl.de
url = https://github.com/althonos/pymuscle
description = Cython bindings and Python interface to Muscle, a software for making multiple alignments of biological sequences.
long_description = file: README.md
long_description_content_type = text/markdown
license = GPLv3
platform = any
keywords = bioinformatics, genome, alignment, muscle, protein
classifier =
    Development Status :: 3 - Alpha
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: GNU General Public License v3 (GPLv3)
    Operating System :: OS Independent
    Programming Language :: C
    Programming Language :: Cython
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: Implementation :: CPython
    Programming Language :: Python :: Implementation :: PyPy
    Topic :: Scientific/Engineering :: Bio-Informatics
    Topic :: Scientific/Engineering :: Medical Science Apps.
    Typing :: Typed
project_urls =
    Documentation = https://pymuscle.readthedocs.io/en/stable/
    Bug Tracker = https://github.com/althonos/pymuscle/issues
    Changelog = https://github.com/althonos/pymuscle/blob/master/CHANGELOG.md
    Coverage = https://codecov.io/gh/althonos/pymuscle/
    Builds = https://github.com/althonos/pymuscle/actions
    Paper = https://doi.org/10.21105/joss.04296
    PyPI = https://pypi.org/project/pymuscle

[options]
zip_safe = false
packages = pymuscle, pymuscle.tests
include_package_data = true
python_requires = >=3.5
setup_requires =
    setuptools >=46.4
    cython ~=0.29.16

[options.entry_points]
console_scripts =
    pymuscle = pymuscle.cli:main

[options.package_data]
pymuscle = py.typed, *.pyi
pymuscle.tests = data/*

[coverage:run]
plugins = Cython.Coverage

[coverage:report]
include = pymuscle/*
omit = pymuscle/tests/*
show_missing = true
exclude_lines =
    pragma: no cover
    if typing.TYPE_CHECKING:
    @abc.abstractmethod
    @abc.abstractproperty
    raise NotImplementedError
    return NotImplemented
    raise MemoryError()

[mypy]
disallow_any_decorated = true
disallow_any_generics = true
disallow_any_unimported = false
disallow_subclassing_any = false
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_return_any = true
exclude = pymuscle/tests/*
